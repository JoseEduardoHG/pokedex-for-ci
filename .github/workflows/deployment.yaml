name: CI & CD

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      run-checks: ${{ !fromJSON(steps.changed-files.outputs.only_modified) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            .github/**
            .husky/**
            .vscode/**
            public/**
            src/assets/**
            docs/**
            **/*.md
            **/*.json
  build:
    name: Run Build
    needs: changed-files
    if: fromJSON(needs.changed-files.outputs.run-checks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21.x
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
  lint:
    name: Run Lint
    needs: changed-files
    if: fromJSON(needs.changed-files.outputs.run-checks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21.x
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  tests:
    name: Run Tests
    needs: changed-files
    if: fromJSON(needs.changed-files.outputs.run-checks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21.x
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test:run
  deploy:
    name: Run Deploy
    needs:
      # - changed-files
      - build
      - lint
      - tests
    # if: ${{ github.event_name == 'push' && fromJSON(needs.changed-files.outputs.run-checks) && success() }}
    if: ${{ github.event_name == 'push' && success() }}
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21.x
          cache: npm
      - name: Install Vercel CLI
        run: npm install --global vercel
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - name: Build Project Artifacts
        run: vercel build --prod --token=$VERCEL_TOKEN
      - name: Deploy Project Artifacts
        run: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
